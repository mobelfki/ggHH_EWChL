#! /usr/bin/env python

import sys, os, math
import time
import getpass


def createjoblist(user,jobs,time):

    qs = os.popen('squeue -l -u '+user)
    lines = qs.readlines()
    time.append(lines[0].rstrip())
    for line in lines[2:]:
        tline=tuple(" ".join(line.split()).split())
        status=tline[4]

        if jobs.has_key(tline[2]):
            jobs[tline[2]].append(tline)
        else:
            jobs[tline[2]] = [tline]

    return

def sed(infile,outfile,subs):

    if not os.path.isfile(infile):
        print "Input file "+infile+" does not exist."

    readall=False
    inputsave=open(infile,'r')
    input4run=open(outfile,'w')
    
    while not readall:
        
        parline=inputsave.readline()
        
        if len(parline)==0:
            readall=True
            break

        for string in subs.keys():
        
            if string in parline:
                parline=parline.replace(string,subs[string])

        input4run.write(parline)
        
    inputsave.close()
    input4run.close()

    return

def jobsstatus(jobs,user):

    qtot=0
    rtot=0
    time=[]

    createjoblist(user,jobs,time)
    
    if len(jobs)>0:
    
        print "****************************************"
        print time[0]
        print "USER:", user

        for jobname in jobs.keys():
            q=0
            r=0

            for j in jobs[jobname]:
                if j[4]=='PENDING':
                    q=q+1
                elif j[4]=='RUNNING':
                    r=r+1
                else:
                    print "Error in job:", j
            print len(jobs[jobname]), 'jobs:', jobname
            print ">>>", r, " jobs running, ", q, " jobs in queue"
            qtot=qtot+q
            rtot=rtot+r

        print "****************************************"
        print "Total number of jobs:"
        print "    - running="+str(rtot)
        print "    - queuing="+str(qtot)        
        print "****************************************"
    return


if __name__=='__main__':

    # username on cluster
    
    user=getpass.getuser()
    jobs = {}
    jobsstatus(jobs,user)
